{"version":3,"sources":["components/Header.js","shared/teams.js","components/TeamChart.js","components/WinningChart.js","components/SeasonChart.js","components/Content.js","components/Footer.js","components/Main.js","App.js","serviceWorker.js","index.js"],"names":["Header","props","state","isNavOpen","toggleNav","bind","this","setState","Fragment","Navbar","color","light","expand","className","NavbarBrand","href","NavbarToggler","onClick","Collapse","isOpen","navbar","Nav","NavItem","NavLink","Jumbotron","fluid","Component","teamnames","seasons","Teams","teams","i","length","tId","tname","match","win","toss","tie","winsup","tossnwin","tossbwin","batwin","fieldwin","batfirst","ipl","IPL","TeamIndex","name","matches","map","t1","team1","t2","team2","sId","year","console","log","SeasonIndex","season","tId1","tId2","result","winner","win_by_runs","toss_winner","toss_decision","j","RenderTeam","winp","total","part","num","Math","floor","Average","team","id","style","width","value","maxValue","minValue","strokeWidth","styles","buildStyles","strokeLinecap","pathColor","textColor","text","RenderBar","val","labels","datasets","label","backgroundColor","borderColor","borderWidth","data","options","title","display","fontSize","legend","plugins","deferred","xOffset","yOffset","delay","Winning","ind","push","RenderLine","Season","tdata","jnd","line","Content","handleSubmit","values","alert","JSON","stringify","Foot","Main","App","Boolean","window","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.3ee85048.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport {Nav, NavItem,NavLink,Navbar,NavbarBrand, Collapse, NavbarToggler, Jumbotron} from 'reactstrap';\r\nclass Header extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            isNavOpen : false\r\n        }\r\n        this.toggleNav=this.toggleNav.bind(this);\r\n    }\r\n    toggleNav(){\r\n        this.setState({\r\n            isNavOpen: !this.state.isNavOpen\r\n        });\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <React.Fragment>\r\n               \r\n                <Navbar color=\"light\" light expand=\"md\" className=\"header\" >\r\n                <div className=\"container\">\r\n                    <NavbarBrand href=\"/ipl-gradesheet/\">IPL Grade</NavbarBrand>\r\n                    <NavbarToggler onClick={this.toggleNav}/>\r\n                    <Collapse isOpen={this.state.isNavOpen} navbar>\r\n                        <Nav navbar >\r\n                        <NavItem>\r\n                                <NavLink className=\"nav-link\" href=\"/ipl-gradesheet/#win\">\r\n                                    Winning Grade\r\n                                </NavLink>\r\n                            </NavItem>\r\n                            <NavItem>\r\n                                <NavLink className=\"nav-link\" href=\"/ipl-gradesheet/#team\">\r\n                                    Team Grade\r\n                                </NavLink>\r\n                            </NavItem>\r\n                            <NavItem>\r\n                                <NavLink className=\"nav-link\" href=\"/ipl-gradesheet/#season\">\r\n                                    Season Grade\r\n                                </NavLink>\r\n                            </NavItem>\r\n                            \r\n                            \r\n                        </Nav>\r\n                    </Collapse>\r\n                    </div>\r\n                </Navbar>\r\n                <Jumbotron fluid>\r\n                    <div  className=\"container jumbo\">\r\n                        <div className=\" jumbo-head col-12\">\r\n                            <span>\r\n                            <h1 className=\"display-3\">Indian Premiere League</h1>\r\n                            </span>\r\n                        </div>\r\n                    </div>\r\n                </Jumbotron>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n} \r\n\r\nexport default Header;\r\n\r\n//<h1 className=\"jumbo-head display-4\">Indian Premier League</h1>\r\n","import matches from '../shared/data/matches.json';\r\n\r\nconst teamnames=[\"Mumbai Indians\",\"Chennai Super Kings\",\"Kolkata Knight Riders\",\"Delhi Capitals\",\"Sunrisers Hyderabad\",\"Kings XI Punjab\",\"Rajasthan Royals\",\"Royal Challengers Bangalore\",\"Deccan Chargers\",\"Kochi Tuskers Kerala\",\"Pune Warriors\",\"Rising Pune Supergiants\",\"Gujarat Lions\"];\r\nconst seasons=[0,2008,2009,2010,2011,2012,2013,2014,2015,2016,2017,2018,2019]\r\nfunction Teams(teamnames) {\r\n    const teams=[];\r\n    for(var i=0;i<teamnames.length;i++){\r\n        teams[i]={\r\n            tId: i,\r\n            tname: teamnames[i],\r\n            match:0,\r\n            win:0,\r\n            toss:0,\r\n            tie:0,\r\n            winsup:0,\r\n            tossnwin:0,\r\n            tossbwin:0,\r\n            batwin:0,\r\n            fieldwin:0,\r\n            batfirst:0\r\n        }\r\n    }\r\n    return teams;\r\n}\r\nfunction IPL(seasons){\r\n    const ipl=[];\r\n    for(var i=0;i<seasons.length;i++){\r\n        ipl[i]=Teams(teamnames)\r\n    }\r\n    return(ipl);\r\n}\r\nconst ipl=IPL(seasons);\r\nconst teams=Teams(teamnames);\r\n\r\nfunction TeamIndex(name){\r\n    for(var i=0;i<teamnames.length;i++)\r\n    {\r\n        if(name===\"Delhi Daredevils\")\r\n        name=\"Delhi Capitals\";\r\n        if(name===\"Rising Pune Supergiant\")\r\n        name=\"Rising Pune Supergiants\";\r\n\r\n        if(teamnames[i]===name)\r\n        return(i);\r\n    }\r\n}\r\nfunction SeasonIndex(year){\r\n    for(var i=0;i<seasons.length;i++){\r\n        if(year==seasons[i])\r\n        return (i);\r\n        if(i==seasons.length-1){\r\n            console.log(\"Edited data?\");\r\n            return(0);\r\n        }\r\n    }\r\n}\r\nmatches.map((match)=> {\r\n    const t1=match.team1;\r\n    const t2=match.team2;\r\n    const s=match.season;\r\n    const sId=SeasonIndex(s);\r\n    const tId1=TeamIndex(t1);\r\n    const tId2=TeamIndex(t2);\r\n\r\n    ipl[sId][tId1].match++;\r\n    ipl[sId][tId2].match++;    \r\n    if(match.result===\"normal\"){\r\n        if(match.winner===t1){\r\n            ipl[sId][tId1].win++;\r\n            if(match.win_by_runs===0)\r\n            ipl[sId][tId1].fieldwin++;\r\n            else\r\n            ipl[sId][tId1].batwin++;\r\n        }else{\r\n            ipl[sId][tId2].win++;\r\n            if(match.win_by_runs===0)\r\n            ipl[sId][tId2].fieldwin++;\r\n            else\r\n            ipl[sId][tId2].batwin++;\r\n        }\r\n    }\r\n    if(match.result===\"tie\"){\r\n        ipl[sId][tId1].tie++;\r\n        ipl[sId][tId2].tie++;\r\n        if(match.winner===t1){\r\n            ipl[sId][tId1].win++;\r\n            ipl[sId][tId1].winsup++;\r\n        }else{\r\n            ipl[sId][tId2].win++;\r\n            ipl[sId][tId2].winsup++;\r\n        }   \r\n    }\r\n    if((match.toss_winner===t1)&&(match.result===t1))\r\n    ipl[sId][tId1].tossnwin++;\r\n    else if((match.toss_winner===t2)&&(match.result===t2))\r\n    ipl[sId][tId2].tossnwin++;\r\n    else if((match.toss_winner===t1)&&(match.result===t2))\r\n    ipl[sId][tId2].tossbwin++;\r\n    else if((match.toss_winner===t2)&&(match.result===t1))\r\n    ipl[sId][tId1].tossbwin++;\r\n\r\n    if(match.toss_winner===t1){\r\n        ipl[sId][tId1].toss++;\r\n        \r\n        if(match.toss_decision===\"bat\")\r\n        ipl[sId][tId1].batfirst++;\r\n        else\r\n        ipl[sId][tId2].batfirst++;\r\n\r\n        if(match.winner===t2)\r\n        ipl[sId][tId2].tossbwin++;\r\n        else\r\n        ipl[sId][tId1].tossnwin++;\r\n    }else{\r\n        ipl[sId][tId2].toss++;\r\n        if(match.toss_decision===\"bat\")\r\n        ipl[sId][tId2].batfirst++;\r\n        else\r\n        ipl[sId][tId1].batfirst++;\r\n        if(match.winner===t2)\r\n        ipl[sId][tId2].tossnwin++;\r\n        else\r\n        ipl[sId][tId1].tossbwin++;\r\n    }\r\n});\r\n\r\nfor(var i=1;i<seasons.length;i++){\r\n    for(var j=0;j<teamnames.length;j++){\r\n        ipl[0][j].match+=ipl[i][j].match;\r\n        ipl[0][j].win+=ipl[i][j].win;\r\n        ipl[0][j].batwin+=ipl[i][j].batwin;\r\n        ipl[0][j].fieldwin+=ipl[i][j].fieldwin;\r\n        ipl[0][j].tie+=ipl[i][j].tie;\r\n        ipl[0][j].toss+=ipl[i][j].toss;\r\n        ipl[0][j].tossbwin+=ipl[i][j].tossbwin;\r\n        ipl[0][j].tossnwin+=ipl[i][j].tossnwin;\r\n        ipl[0][j].winsup+=ipl[i][j].winsup;\r\n    }\r\n\r\n}\r\n\r\n\r\nexport default ipl ;","import React, { Component } from 'react';\r\nimport { CircularProgressbar, buildStyles } from 'react-circular-progressbar';\r\nimport 'react-circular-progressbar/dist/styles.css';\r\nfunction Average(total, part) {\r\n    if (total === 0)\r\n        return (0);\r\n    const num = 100 * part / total;\r\n    //console.log((Math.floor(num * 100) / 100));\r\n    return (Math.floor(num * 100) / 100);\r\n}\r\nfunction RenderTeam(props) {\r\n    const winp = Average(props.team.match, props.team.win);\r\n    return (\r\n        <div className=\"no-gap team container col-12\" id={\"team\" + props.team.tId}  >\r\n            <div className=\"row col-12 \">\r\n                <div className=\"no-gap row header-container\">\r\n                <span className=\"circular\" style={{ width: \"50px\" }}>\r\n                    <CircularProgressbar value={winp} maxValue={100} minValue={0} strokeWidth={5} styles={buildStyles({\r\n                        strokeLinecap: \"butt\",pathColor: `#030346d5`,\r\n                        textColor: '#030346d5'\r\n                    })} text={`${winp}%`} />\r\n                </span>\r\n                <span className=\"team-header\">\r\n                <h1>{props.team.tname}</h1>\r\n\r\n                </span>\r\n                </div>\r\n                \r\n            </div>\r\n            <div className=\"row col-12 box-content\">\r\n                <div className=\"col-md-2 col-sm-3 col-6  key \">Macthes</div>\r\n                <div className=\"col-md-2 col-sm-3 col-6 value\">{props.team.match}</div>\r\n                <div className=\"col-md-2 col-sm-3 col-6  key\">Wins</div>\r\n                <div className=\"col-md-2 col-sm-3 col-6 value\">{props.team.win}</div>\r\n                <div className=\"col-md-2 col-sm-3 col-6  key\">Toss</div>\r\n                <div className=\"col-md-2 col-sm-3 col-6 value\">{props.team.toss}</div>\r\n                <div className=\"col-md-2 col-sm-3 col-6  key\">Toss2Win</div>\r\n                <div className=\"col-md-2 col-sm-3 col-6 value\">{props.team.tossnwin}</div>\r\n                <div className=\"col-md-2 col-sm-3 col-6  key\">Bat1stWin</div>\r\n                <div className=\"col-md-2 col-sm-3 col-6 value\">{props.team.batwin}</div>\r\n                <div className=\"col-md-2 col-sm-3 col-6  key\">Field1stWin</div>\r\n                <div className=\"col-md-2 col-sm-3 col-6 value\">{props.team.fieldwin}</div>\r\n                <div className=\"col-md-2 col-sm-3 col-6  key\">Tie</div>\r\n                <div className=\"col-md-2 col-sm-3 col-6 value\">{props.team.tie}</div>\r\n                <div className=\"col-md-2 col-sm-3 col-6  key\">Suppa Winner</div>\r\n                <div className=\"col-md-2 col-sm-3 col-6 value\">{props.team.winsup}</div>\r\n                \r\n                \r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction Teams(props) {\r\n    const team = props.teams[0].map((team) => {\r\n        return (\r\n            \r\n                <RenderTeam team={team} />\r\n          \r\n        );\r\n    });\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"no-gap team container\">\r\n            {team}\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default Teams;","import React from 'react';\r\nimport {Bar} from 'react-chartjs-2';\r\nconst teamnames=[\"MI\",\"CSK\",\"KKR\",\"DD\",\"SRH\",\"KXIP\",\"RR\",\"RCB\",\"DC\",\"KTK\",\"PW\",\"RPS\",\"GL\"];\r\n\r\nfunction fnS(i) {\r\n  if (i == 0) {\r\n      return (\"All Seasons Combines\");\r\n  }\r\n  else {\r\n      return (\"Season: \" + i + \" -> \" + (2006 + i));\r\n  }\r\n}\r\nfunction RenderBar(val) {\r\n    const state = {\r\n        labels: teamnames,\r\n        datasets: [\r\n          {\r\n            label: (val.value.label),\r\n            backgroundColor: '#030346d5',\r\n            borderColor: 'rgba(0,0,0,0.5)',\r\n            borderWidth: 1,\r\n            data: val.value.data\r\n          }\r\n        ]\r\n      }\r\n      return (\r\n        <div className=\"page-content\">\r\n          <Bar\r\n            data={state}\r\n            options={{\r\n              title:{\r\n                display:true,\r\n                text: val.value.title,\r\n                fontSize:20\r\n              },\r\n              legend:{\r\n                display:false\r\n              },\r\n              plugins:{\r\n                deferred: {\r\n                  xOffset : 150,\r\n                  yOffset: '80%',\r\n                  delay: 800\r\n                }\r\n              }\r\n              \r\n            }}\r\n          />\r\n        </div>\r\n      );\r\n      \r\n}\r\n\r\n\r\n\r\nfunction Winning(props) {\r\n  var ind=0;\r\n\r\n    const season= props.ipl.map((season)=>{\r\n      const data=[];\r\n      const team=season.map((team)=>{\r\n        data.push((100*team.win/team.match));\r\n      });\r\n      \r\n      const title= fnS(ind);\r\n\r\n      const val={\r\n        data: data,\r\n        label: \"Winning Probability\",\r\n        title: title\r\n      };\r\n      ind++;\r\n      if(ind>=12)\r\n      return(\r\n        <div></div>\r\n      )\r\n      else{\r\n        return(\r\n          <div className=\"col-sm-12 col-md-6 graph\">\r\n              <RenderBar value={val}/>\r\n          </div>\r\n            \r\n        );\r\n      }\r\n       \r\n      \r\n\r\n    });\r\n    return(\r\n      <div className=\"no-gap team container\">\r\n        <div className=\"row\">\r\n          \r\n          {season}\r\n        \r\n        \r\n        </div>\r\n        \r\n      </div>\r\n    );\r\n       \r\n}\r\n\r\n\r\n\r\n\r\nexport default Winning;","import React from 'react';\r\nimport {Line} from 'react-chartjs-2';\r\nconst teamnames=[\"Mumbai Indians\",\"Chennai Super Kings\",\"Kolkata Knight Riders\",\"Delhi Capitals\",\"Sunrisers Hyderabad\",\"Kings XI Punjab\",\"Rajasthan Royals\",\"Royal Challengers Bangalore\",\"Deccan Chargers\",\"Kochi Tuskers Kerala\",\"Pune Warriors\",\"Rising Pune Supergiants\",\"Gujarat Lions\"];\r\n\r\nfunction fnS(i) {\r\n    if (i == 0) {\r\n        return (\"Overall\");\r\n    }\r\n    else {\r\n        return (2007+ i );\r\n    }\r\n}\r\nconst label=[];\r\nfor( var i=0;i<10;i++)\r\nlabel.push(fnS(i));\r\n\r\nfunction RenderLine(val) {\r\n    const state = {\r\n        labels: label,\r\n        datasets: [\r\n          {\r\n            label: (val.value.label),\r\n            backgroundColor: '#030346d5',\r\n            borderColor: '#030346d5',\r\n            borderWidth: 1,\r\n            data: val.value.data\r\n          }\r\n        ]\r\n      }\r\n      return (\r\n        <div >\r\n          <Line\r\n            data={state}\r\n            options={{\r\n              title:{\r\n                display:true,\r\n                text: val.value.title,\r\n                fontSize:20\r\n              },\r\n              legend:{\r\n                display:false\r\n              }\r\n            }}\r\n          />\r\n        </div>\r\n      );\r\n      \r\n}\r\n\r\nfunction Season(props) {\r\n    const tdata=[];\r\n    const title=[];\r\n    \r\n    for(var i=0;i<13;i++){\r\n        const data=[];\r\n        var jnd=0;\r\n        const team=props.ipl.map((team)=>{\r\n            if(jnd>=0)\r\n            data.push((100*team[i].win/team[i].match));\r\n            jnd++;\r\n            // console.log(team[i].tname+team[i].win)\r\n        });\r\n        tdata.push(data);\r\n        \r\n    }\r\n    var ind=0;\r\n    const line=tdata.map((data)=>{\r\n        const val={\r\n            data: data,\r\n            label: \"Win Progress\",\r\n            title: teamnames[ind]\r\n        };\r\n        ind++;\r\n        return(\r\n            <div className=\"col-sm-12 col-md-6 graph\" >\r\n              <RenderLine value={val}/>\r\n            </div>\r\n        );\r\n\r\n\r\n    });\r\n\r\n    return(\r\n        <div className=\"win no-gap team container\">\r\n        <div className=\"row\">\r\n        {line}\r\n        </div>\r\n       \r\n      </div>\r\n\r\n    );\r\n}\r\nexport default Season;","import React, {useState, Component } from 'react';\r\nimport ipl from '../shared/teams';\r\nimport Teams from './TeamChart';\r\nimport Winning from './WinningChart';\r\nimport Season from './SeasonChart';\r\nimport 'chartjs-plugin-deferred';\r\n\r\n\r\nimport { Button,ButtonDropdown, DropdownToggle, DropdownMenu, DropdownItem } from 'reactstrap';\r\nconst teamnames=[\"Mumbai Indians\",\"Chennai Super Kings\",\"Kolkata Knight Riders\",\"Delhi Capitals\",\"Sunrisers Hyderabad\",\"Kings XI Punjab\",\"Rajasthan Royals\",\"Royal Challengers Bangalore\",\"Deccan Chargers\",\"Kochi Tuskers Kerala\",\"Pune Warriors\",\"Rising Pune Supergiants\",\"Gujarat Lions\"];\r\n\r\n\r\n\r\n\r\nfunction Average(total, part) {\r\n    return (part / total);\r\n}\r\n\r\n\r\n\r\nclass Content extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.handleSubmit =this.handleSubmit.bind(this);\r\n    }\r\n    handleSubmit(values){\r\n        alert(\"Current state is \"+ JSON.stringify(values))\r\n    }\r\n    render() {\r\n        var i = 0;\r\n        const teams = ipl.map((teams) => {\r\n            i++;\r\n            const team = teams.map((season) => {\r\n\r\n                return (\r\n                    <React.Fragment>\r\n                        <div className=\"row\">\r\n                            <div>Name - {season.tname}. </div>\r\n                            <div>Match - {season.match}.  </div>\r\n                            <div>Win - {season.win}.  </div>\r\n                            <div>Prob - {Average(season.match, season.win)}.  </div>\r\n                            <div>Toss Win - {season.toss}. </div>\r\n                        </div>\r\n                    </React.Fragment>\r\n                );\r\n            });\r\n\r\n\r\n            return (\r\n                <React.Fragment>\r\n\r\n                    <div className=\"header\">\r\n                        <h2></h2>\r\n                        {team}\r\n                    </div>\r\n                </React.Fragment>\r\n            );\r\n\r\n        });\r\n\r\n\r\n        return (\r\n            <div className=\"container page\">\r\n                <h1 className=\"page-header\" id=\"win\">Winning Grade</h1>\r\n                <Winning ipl={ipl} />\r\n                <h1 className=\"page-header\" id=\"team\">Team Grade</h1>\r\n                <Teams teams={ipl} />\r\n                <h1 className=\"page-header\" id=\"season\">Season Grade</h1>\r\n                <Season ipl={ipl} />\r\n                \r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\nexport default Content;\r\n","import React from 'react';\r\nimport {Jumbotron } from 'reactstrap';\r\nfunction Foot(props) {\r\n    return(\r\n        <div className=\"container footer\">\r\n            <div className='foot-note'>\r\n                &copy;2020 Shivam Kumar\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default Foot;","import React, { Component } from 'react';\r\nimport Header from './Header';\r\nimport Content from './Content';\r\nimport Foot from './Footer';\r\nclass Main extends Component{\r\n\r\n    render(){\r\n        return(\r\n            <React.Fragment>\r\n                <Header/>\r\n                <Content />\r\n                <Foot />\r\n\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\nexport default Main;","import React from 'react';\nimport './App.css';\nimport Main from './components/Main';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Main/>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}